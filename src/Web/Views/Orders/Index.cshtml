@model List<Application.Features.Orders.Queries.Get.GetForCustomer.GetOrdersForCustomerQueryResponse>
@{
    ViewBag.Title = "My Orders";
}

<div class="container">
    <h2>My Orders</h2>
    
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="row">
        <div class="col-md-12">
            @if (Model?.Any() ?? false)
            {
                <table class="table table-striped table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Total Amount</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.OrderId</td>
                                <td>@order.CreatedAt.ToString("MM/dd/yyyy")</td>
                                <td>@order.TotalAmount.Amount.ToString("C")</td>
                                <td>
                                    <span class="badge badge-@GetStatusClass(order.Status)">
                                        @order.Status
                                    </span>
                                </td>
                                <td>
                                    @Html.ActionLink("Details", "Details", new { id = order.OrderId }, new { @class = "btn btn-info btn-sm" })
                                    @if (order.Status == Domain.Enums.OrderStatus.Pending || 
                                         order.Status == Domain.Enums.OrderStatus.Confirmed)
                                    {
                                        @Html.ActionLink("Cancel", "Cancel", new { id = order.OrderId }, new { @class = "btn btn-danger btn-sm" })
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    <h4>No Orders Found</h4>
                    <p>You haven't placed any orders yet.</p>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusClass(Domain.Enums.OrderStatus status)
    {
        switch (status)
        {
            case Domain.Enums.OrderStatus.Pending:
                return "warning";
            case Domain.Enums.OrderStatus.Confirmed:
                return "info";
            case Domain.Enums.OrderStatus.Shipped:
                return "primary";
            case Domain.Enums.OrderStatus.Delivered:
                return "success";
            case Domain.Enums.OrderStatus.Cancelled:
                return "danger";
            default:
                return "secondary";
        }
    }
}
