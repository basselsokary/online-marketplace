@model Application.Features.Orders.Queries.GetById.ForCustomer.GetOrderByIdForCustomerQueryResponse

@{
    ViewBag.Title = "Order Details";
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h2>Order Details - #@Model.Id</h2>
            
            <div class="card">
                <div class="card-header">
                    <h5>Order Information</h5>
                </div>
                <div class="card-body">
                    <div class="col-md-6">
                        <p><strong>Status:</strong> 
                            <span class="badge badge-@GetStatusClass(Model.Status)">@Model.Status</span>
                        </p>
                        <p><strong>Total Amount:</strong> @Model.TotalAmount.Amount.ToString("C")</p>
                    </div>
                    
                    <hr />
                    <h6>Shipping Address</h6>
                    <p>@Model.Address.ToString()</p>
                </div>
            </div>

            @if (Model.OrderItems.Any())
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Order Items</h5>
                    </div>
                    <div class="card-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td>#@item.ProductId</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.UnitPrice.Amount.ToString("C")</td>
                                        <td>@(item.UnitPrice.Amount * item.Quantity).ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            
            <div class="mt-3">
                @Html.ActionLink("Back to Orders", "Index", null, new { @class = "btn btn-secondary" })
                @if (Model.Status != Domain.Enums.OrderStatus.Delivered && 
                     Model.Status != Domain.Enums.OrderStatus.Cancelled)
                {
                    @Html.ActionLink("Cancel Order", "Cancel", new { id = Model.Id }, new { @class = "btn btn-danger" })
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusClass(Domain.Enums.OrderStatus status)
    {
        switch (status)
        {
            case Domain.Enums.OrderStatus.Pending:
                return "warning";
            case Domain.Enums.OrderStatus.Confirmed:
                return "info";
            case Domain.Enums.OrderStatus.Shipped:
                return "primary";
            case Domain.Enums.OrderStatus.Delivered:
                return "success";
            case Domain.Enums.OrderStatus.Cancelled:
                return "danger";
            default:
                return "secondary";
        }
    }
}