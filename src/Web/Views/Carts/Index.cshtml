@model Application.Features.Carts.Queries.Get.GetCartItemsQueryResponse

@{
    ViewData["Title"] = "Shopping Cart";
    decimal total = Model?.TotalPrice ?? 0;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="fas fa-shopping-cart me-2"></i>
                Shopping Cart
                @if (Model?.CartItems.Count > 0)
                {
                    <span class="badge bg-primary ms-2">@Model.CartItems.Count items</span>
                }
            </h2>
        </div>
    </div>

    @if (Model == null || Model.CartItems == null || !Model.CartItems.Any())
    {
        <div class="row">
            <div class="col-12 text-center py-5">
                <div class="empty-cart">
                    <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">Your cart is empty</h4>
                    <p class="text-muted mb-4">Add some items to your cart to get started!</p>
                    <a href="@Url.Action("Index", "Products")" class="btn btn-primary">
                        <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <!-- Cart Items -->
            <div class="col-lg-8">
                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Cart Items</h5>
                    </div>
                    <div class="card-body p-0">
                        @foreach (var item in Model.CartItems)
                        {
                            <div class="cart-item border-bottom p-3" data-item-id="@item.Id">
                                <div class="row align-items-center">
                                    <!-- Product Image -->
                                    <div class="col-md-2 col-3">
                                        <img src="@(item.ProductImageUrl != null? $"/images/{item.ProductImageUrl}": "/images/no-image.jpg")" 
                                             alt="@item.ProductName" 
                                             class="img-fluid rounded"
                                             style="max-height: 80px; object-fit: cover;">
                                    </div>
                                    
                                    <!-- Product Details -->
                                    <div class="col-md-4 col-9">
                                        <h6 class="mb-1">@item.ProductName</h6>
                                        @if (!string.IsNullOrEmpty(item.ProductDescription))
                                        {
                                            <p class="text-muted small mb-1">@item.ProductDescription</p>
                                        }
                                        @* @if (!string.IsNullOrEmpty(item.Size) || !string.IsNullOrEmpty(item.Color))
                                        {
                                            <div class="small text-muted">
                                                @if (!string.IsNullOrEmpty(item.Size))
                                                {
                                                    <span>Size: @item.Size</span>
                                                }
                                                @if (!string.IsNullOrEmpty(item.Color))
                                                {
                                                    @if (!string.IsNullOrEmpty(item.Size)) { <span class="mx-1">|</span> }
                                                    <span>Color: @item.Color</span>
                                                }
                                            </div>
                                        } *@
                                    </div>
                                    
                                    <!-- Price -->
                                    <div class="col-md-2 col-6 text-center">
                                        <div class="fw-bold">@item.ProductPrice.Amount.ToString("C")</div>
                                    </div>
                                    
                                    <!-- Quantity Controls -->
                                    <div class="col-md-2 col-6">
                                        <select class="form-select form-select-sm quantity-select"
                                                data-item-id="@item.Id">
                                                @for (int i = 1; i <= 10; i++)
                                                {
                                                    @if (i == item.Quantity){
                                                    <option value="@i" selected >@i</option>
                                                    } else {
                                                    <option value="@i" >@i</option>
                                                    }
                                                }
                                        </select>
                                    </div>
                                    
                                    <!-- Subtotal and Remove -->
                                    <div class="col-md-2 col-12 text-end">
                                        <div class="fw-bold mb-1 item-subtotal">
                                            @((item.ProductPrice.Amount * item.Quantity).ToString("C"))
                                        </div>
                                        <button class="btn btn-sm btn-outline-danger remove-item" 
                                                data-item-id="@item.Id">
                                            <i class="fas fa-trash-alt me-1"></i>Remove
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                
                <!-- Continue Shopping -->
                <div class="mt-3">
                    <a href="@Url.Action("Index", "Products")" class="btn btn-outline-primary">
                        <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                    </a>
                </div>
                <div class="mt-3">
                    <a href="@Url.Action("ClearCart")" class="btn btn-outline-danger">
                        Clear Cart
                    </a>
                </div>
            </div>
            
            <!-- Order Summary -->
            <div class="col-lg-4">
                <div class="card shadow-sm sticky-top" style="top: 20px;">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Order Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span class="subtotal-amount">@total.ToString("C")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping:</span>
                            <span class="shipping-amount">
                                @* Shipping is free now *@
                                Free
                            </span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total:</strong>
                            <strong class="total-amount">
                                @total.ToString("C")
                            </strong>
                        </div>
                        
                        @if (total > 0)
                        {
                            <!-- Promo Code -->
                            @* <div class="mb-3">
                                <div class="input-group input-group-sm">
                                    <input type="text" 
                                           class="form-control" 
                                           placeholder="Promo code" 
                                           id="promoCode">
                                    <button class="btn btn-outline-secondary" type="button" id="applyPromo">
                                        Apply
                                    </button>
                                </div>
                            </div> *@
                            
                            <!-- Checkout Button -->
                            <div class="d-grid">
                                <a href="@Url.Action("Checkout", "Carts")" class="btn btn-success btn-lg">
                                    <i class="fas fa-lock me-2"></i>Proceed to Checkout
                                </a>
                            </div>
                            
                            <!-- Payment Methods -->
                            <div class="text-center mt-3">
                                <small class="text-muted">We accept:</small>
                                <div class="mt-1">
                                    <i class="fab fa-money-bills fa-lg me-1"></i>
                                    <i class="fab fa-cc-visa fa-lg me-1"></i>
                                    <i class="fab fa-cc-mastercard fa-lg me-1"></i>
                                    <i class="fab fa-cc-amex fa-lg me-1"></i>
                                    <i class="fab fa-paypal fa-lg"></i>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Remove Item Confirmation Modal -->
<div class="modal fade" id="removeItemModal" tabindex="-1" aria-labelledby="removeItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeItemModalLabel">Remove Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove this item from your cart?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRemove">Remove Item</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function() {
            let itemToRemove = null;
            
            // Quantity change handlers
            $('.quantity-select').change(function() {
                @* const action = $(this).data('action'); *@
                const itemId = $(this).data('item-id');
                const quantity = parseInt($(this).val());
                
                updateQuantity(itemId, quantity);
            });
            
            // Remove item handler
            $('.remove-item').click(function() {
                itemToRemove = $(this).data('item-id');
                $('#removeItemModal').modal('show');
            });
            
            // Confirm remove
            $('#confirmRemove').click(function() {
                $('#removeItemModal').modal('hide');
                if (itemToRemove) {
                    removeItem(itemToRemove);
                    itemToRemove = null;
                }
            });
            
            // Promo code handler
            @* $('#applyPromo').click(function() {
                const promoCode = $('#promoCode').val();
                if (promoCode) {
                    applyPromoCode(promoCode);
                }
            }); *@
            
            // AJAX functions
            function updateQuantity(itemId, quantity) {
                $.ajax({
                    url: '@Url.Action("UpdateItemQuantity", "Carts")',
                    type: 'POST',
                    data: {
                        itemId: itemId,
                        quantity: quantity,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            showAlert('Error updating quantity: ' + response.message, 'danger');
                        }
                    },
                    error: function() {
                        showAlert('Error updating cart. Please try again.', 'danger');
                    }
                });
            }
            
            function removeItem(itemId) {
                $.ajax({
                    url: '@Url.Action("RemoveItem", "Carts")',
                    type: 'POST',
                    data: {
                        itemId: itemId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            $(`.cart-item[data-item-id="${itemId}"]`).fadeOut(300, function() {
                                $(this).remove();
                                location.reload();
                            });
                            
                            showAlert('Item removed from cart', 'success');
                        } else {
                            showAlert('Error removing item: ' + response.message, 'danger');
                        }
                    },
                    error: function() {
                        showAlert('Error removing item. Please try again.', 'danger');
                    }
                });
            }
            
            function applyPromoCode(code) {
                $.ajax({
                    url: '@Url.Action("ApplyPromoCode", "Carts")',
                    type: 'POST',
                    data: {
                        promoCode: code,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('Promo code applied successfully!', 'success');
                            location.reload();
                        } else {
                            showAlert('Invalid promo code', 'warning');
                        }
                    },
                    error: function() {
                        showAlert('Error applying promo code. Please try again.', 'danger');
                    }
                });
            }
            
            function updateCartDisplay(cart) {
                // Update item subtotals
                cart.items.forEach(function(item) {
                    const itemRow = $(`.cart-item[data-item-id="${item.id}"]`);
                    itemRow.find('.item-subtotal').text('$' + (item.price * item.quantity).toFixed(2));
                    itemRow.find('.quantity-input').val(item.quantity);
                });
                
                // Update order summary
                $('.subtotal-amount').text('$' + cart.subtotal.toFixed(2));
                $('.tax-amount').text('$' + cart.tax.toFixed(2));
                $('.shipping-amount').text(cart.shipping > 0 ? '$' + cart.shipping.toFixed(2) : 'Free');
                $('.total-amount').text('$' + cart.total.toFixed(2));
            }
            
            function showAlert(message, type) {
                const alert = `
                    <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;
                $('.container').prepend(alert);
                
                // Auto-dismiss after 3 seconds
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 3000);
            }
        });
    </script>
}

@section Styles {
    <style>
        .cart-item {
            transition: all 0.3s ease;
        }
        
        .cart-item:hover {
            background-color: #f8f9fa;
        }
        
        .quantity-input {
            width: 60px;
        }
        
        .empty-cart i {
            opacity: 0.3;
        }
        
        .sticky-top {
            position: -webkit-sticky;
            position: sticky;
        }
        
        @@media (max-width: 768px) {
            .cart-item .row > div {
                margin-bottom: 0.5rem;
            }
            
            .cart-item .col-12:last-child {
                text-align: center !important;
                margin-top: 1rem;
            }
        }
        
        .payment-methods i {
            color: #6c757d;
            transition: color 0.2s ease;
        }
        
        .payment-methods i:hover {
            color: #495057;
        }
    </style>
}

