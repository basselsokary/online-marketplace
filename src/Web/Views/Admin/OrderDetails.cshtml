@using Application.Helpers
@model Application.Features.Orders.Queries.GetById.ForAdmin.GetOrderByIdForAdminQueryResponse

@{
    ViewBag.Title = "Admin - Order Details";
}

<div class="container">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    
    <div class="row">
        <div class="col-md-10">
            <h2>Order Details - #@Model.Id 
                <span class="badge badge-@GetStatusClass(Model.Status)">@Model.Status.GetName()</span>
            </h2>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5>Customer Information</h5>
                        </div>
                        <div class="card-body">
                            <p><strong>Name:</strong> @Model.CustomerName</p>
                            <p><strong>Email:</strong> @Model.CustomerEmail</p>
                            <p><strong>Customer ID:</strong> @Model.CustomerId</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5>Order Information</h5>
                        </div>
                        <div class="card-body">
                            <p><strong>Order Date:</strong> @Model.CreatedAt.ToString("MMMM dd, yyyy HH:mm")</p>
                            <p><strong>Total Amount:</strong> @Model.TotalAmount.Amount.ToString("C")</p>
                            <p><strong>Status:</strong> @Model.Status.GetName()</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card mt-3">
                <div class="card-header">
                    <h5>Shipping Information</h5>
                </div>
                <div class="card-body">
                    <p>@Model.Address.ToString()</p>
                </div>
            </div>

            @if (Model.OrderItems.Any())
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Order Items</h5>
                    </div>
                    <div class="card-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product ID</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td>@item.ProductId</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.UnitPrice.Amount.ToString("C")</td>
                                        <td>@(item.UnitPrice.Amount * item.Quantity).ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-info">
                                    <th colspan="3">Total:</th>
                                    <th>@Model.TotalAmount.Amount.ToString("C")</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            }

            <!-- Admin Actions -->
            <div class="card mt-3">
                <div class="card-header">
                    <h5>Admin Actions</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("UpdateOrderStatus", "Admin", FormMethod.Post, new { @class = "form-inline" }))
                    {
                        @Html.Hidden("orderId", Model.Id)
                        <div class="form-group mr-2">
                            <label for="status" class="mr-2">Update Status:</label>
                            @Html.DropDownList("status", 
                                new SelectList(Enum.GetValues(typeof(Domain.Enums.OrderStatus)), Model.Status),
                                new { @class = "form-control" })
                        </div>
                        <button type="submit" class="btn btn-primary">Update</button>
                    }
                </div>
            </div>
            
            <div class="mt-3">
                @Html.ActionLink("Back to Orders", "Orders", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusClass(Domain.Enums.OrderStatus status)
    {
        switch (status)
        {
            case Domain.Enums.OrderStatus.Pending:
                return "warning";
            case Domain.Enums.OrderStatus.Confirmed:
                return "info";
            case Domain.Enums.OrderStatus.Shipped:
                return "primary";
            case Domain.Enums.OrderStatus.Delivered:
                return "success";
            case Domain.Enums.OrderStatus.Cancelled:
                return "danger";
            default:
                return "secondary";
        }
    }
}